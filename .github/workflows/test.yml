name: Vercel Nextjs Module Livestream Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_NEXT_MODULE_LIVESTREAM_ID }}
on:
  push:
    branches:
      - 'production/**'
    # paths:
    #   - 'apps/nextjs-module-livestream/**'
jobs:
  job1:
    runs-on: ubuntu-latest

    outputs:
      my_output: ${{ steps.out1.outputs.my_output }}
      output_2: ${{ steps.out2.outputs.output_2  }}
      app-shell: ${{ steps.out3.outputs.app-shell }}

    steps:
      - name: output one line
        id: out1
        run: echo 'my_output="Hello, world!"' >> $GITHUB_OUTPUT

      - name: output two line
        id: out2
        run: |
          echo 'output_2="Hello, chicago!"' >> $GITHUB_OUTPUT
      - name: output three line
        id: out3
        run: |
          echo 'app-shell="Hello, app-shell!"' >> $GITHUB_OUTPUT

  job2:
    needs: job1
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: get all outputs from prior job
        run: |
          echo "Full branch name: ${{ github.ref_name }}"


          # Check if the branch name starts with 'production/'

          if [[ "${{ github.ref_name }}" == production/* ]]; then
            # Extract suffix after 'production/'
            SUFFIX="${GITHUB_REF_NAME#production/}"
            echo "Suffix after 'production/': $SUFFIX"

            # Convert outputs from prior job (job1) to JSON
            jobjson='${{ toJSON(needs.job1.outputs) }}'
            echo "The outputs are: $jobjson"

            # Parse JSON using jq
            echo "$jobjson" | jq

            # Safely retrieve specific value using suffix
            output=$(echo "$jobjson" | jq -r ".\"${SUFFIX}\"")
            echo "my_output is $output"

          else
            echo "Branch does not start with 'production/'. Exiting..."
            exit 1
          fi
