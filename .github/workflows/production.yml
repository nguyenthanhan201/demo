name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

on:
  push:
    branches:
      - 'production/**'

jobs:
  generate_outputs:
    runs-on: ubuntu-latest

    outputs:
      app-shell: ${{ steps.generate_outputs.outputs.app_shell }}
      nextjs-module-admin: ${{ steps.generate_outputs.outputs.nextjs-module-admin }}
      nextjs-module-livestream: ${{ steps.generate_outputs.outputs.nextjs-module-livestream }}

    steps:
      - name: Generate all outputs
        id: generate_outputs
        run: |
          echo 'app_shell="prj_QaSqKm52IHermZtIu9jAvcv4VWSi"' >> $GITHUB_OUTPUT
          echo 'nextjs-module-admin="prj_HEIFuRXui7ZtFbX698YOYsko0rIt"' >> $GITHUB_OUTPUT
          echo 'nextjs-module-livestream="prj_QaSqKm52IHermZtIu9jAvcv4VWSi"' >> $GITHUB_OUTPUT

  process_branch_and_outputs:
    needs: generate_outputs
    runs-on: ubuntu-latest

    outputs:
      VERCEL_PROJECT_ID: ${{ steps.get_outputs.outputs.VERCEL_PROJECT_ID }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

        # this job make sure commit message is conventional
      - name: get all outputs from prior job
        id: get_outputs
        run: |
          echo "Full branch name: ${{ github.ref_name }}"

          # Check if the branch name starts with 'production/'
          if [[ "${{ github.ref_name }}" == production/* ]]; then

            # Extract suffix after 'production/'
            SUFFIX="${GITHUB_REF_NAME#production/}"
            echo "Suffix after 'production/': $SUFFIX"

            # Convert outputs from prior job (generate_outputs) to JSON
            jobjson='${{ toJSON(needs.generate_outputs.outputs) }}'
            echo "The outputs are: $jobjson"

            # Parse JSON using jq
            echo "$jobjson" | jq

            # Safely retrieve specific value using suffix
            output=$(echo "$jobjson" | jq -r ".\"${SUFFIX}\"")
            echo "VERCEL_PROJECT_ID is $output"

            # Strip surrounding quotes (if any) from the output
            formatted_output=$(echo "$output" | sed 's/^"//;s/"$//')
            echo "Formatted VERCEL_PROJECT_ID: $formatted_output"

            echo "::set-output name=VERCEL_PROJECT_ID::$formatted_output"

          else
            echo "Branch does not start with 'production/'. Exiting..."
            exit 1
          fi

  deploy_to_vercel:
    needs: process_branch_and_outputs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 8.9.0 # Optional: specify a pnpm version

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Debug VERCEL_PROJECT_ID
        run: echo "VERCEL_PROJECT_ID = ${{ needs.process_branch_and_outputs.outputs.VERCEL_PROJECT_ID }}"

      - name: Pull Vercel Environment Information
        env:
          VERCEL_PROJECT_ID: ${{ needs.process_branch_and_outputs.outputs.VERCEL_PROJECT_ID }}
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        env:
          VERCEL_PROJECT_ID: ${{ needs.process_branch_and_outputs.outputs.VERCEL_PROJECT_ID }}
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }} --scope=apps/app-shell

      - name: Deploy Project Artifacts to Vercel
        env:
          VERCEL_PROJECT_ID: ${{ needs.process_branch_and_outputs.outputs.VERCEL_PROJECT_ID }}
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
